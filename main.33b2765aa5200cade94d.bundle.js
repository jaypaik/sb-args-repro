(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1454:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(1),__webpack_require__(49),__webpack_require__(46),__webpack_require__(1455),__webpack_require__(1456),__webpack_require__(8),__webpack_require__(47);var _clientApi=__webpack_require__(61),_clientLogger=__webpack_require__(43),_configFilename=__webpack_require__(1457);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator)})),(_configFilename.parameters||_configFilename.globalArgs||_configFilename.globalArgTypes)&&(0,_clientApi.addParameters)(function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}({},_configFilename.parameters,{globalArgs:_configFilename.globalArgs,globalArgTypes:_configFilename.globalArgTypes})),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1457:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var parameters={passArgsFirst:!0,actions:{argTypesRegex:"^on.*"}}},1458:function(module,exports,__webpack_require__){"use strict";(function(module){var _framework=__webpack_require__(365);module._StorybookPreserveDecorators=!0,(0,_framework.configure)([__webpack_require__(1459)],module)}).call(this,__webpack_require__(107)(module))},1459:function(module,exports,__webpack_require__){var map={"./Button.stories.tsx":1465,"./ButtonWithDefaultExport.stories.tsx":1463,"./ButtonWithOptionalSizeDefaultExport.stories.tsx":1464};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1459},1463:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Component",(function(){return Component}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),ButtonWithDefaultExport=(__webpack_require__(2),function(props){return react_default.a.createElement("button",Object.assign({type:"button"},props))});ButtonWithDefaultExport.displayName="ButtonWithDefaultExport",ButtonWithDefaultExport.__docgenInfo={description:"The world's most _basic_ button",methods:[],displayName:"ButtonWithDefaultExport",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Button label"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Simple click handler"},size:{required:!0,tsType:{name:"union",raw:'"small" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"large"'}]},description:"Size of the button"}}};try{ButtonWithDefaultExport.displayName="ButtonWithDefaultExport",ButtonWithDefaultExport.__docgenInfo={description:"The world's most _basic_ button",displayName:"ButtonWithDefaultExport",props:{children:{defaultValue:null,description:"Button label",name:"children",required:!0,type:{name:"ReactNode"}},onClick:{defaultValue:null,description:"Simple click handler",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},size:{defaultValue:null,description:"Size of the button",name:"size",required:!0,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithDefaultExport.tsx#ButtonWithDefaultExport"]={docgenInfo:ButtonWithDefaultExport.__docgenInfo,name:"ButtonWithDefaultExport",path:"src/stories/ButtonWithDefaultExport.tsx#ButtonWithDefaultExport"})}catch(__react_docgen_typescript_loader_error){}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithDefaultExport.tsx"]={name:"ButtonWithDefaultExport",docgenInfo:ButtonWithDefaultExport.__docgenInfo,path:"src/stories/ButtonWithDefaultExport.tsx"});__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport {\n  ButtonWithDefaultExport,\n  ButtonWithDefaultExportProps,\n} from "./ButtonWithDefaultExport";\n\nexport default {\n  title: "ButtonWithDefaultExport",\n  component: ButtonWithDefaultExport,\n};\n\nexport const Component = (args: ButtonWithDefaultExportProps) => (\n  <ButtonWithDefaultExport {...args} />\n);\nComponent.story = { args: { children: "Simple button" } };\n',locationsMap:{"buttonwithdefaultexport--component":{startLoc:{col:25,line:12},endLoc:{col:1,line:14},startBody:{col:25,line:12},endBody:{col:1,line:14}}}}},title:"ButtonWithDefaultExport",component:ButtonWithDefaultExport};var Component=function(args){return react_default.a.createElement(ButtonWithDefaultExport,args)};Component.displayName="Component",Component.story={args:{children:"Simple button"}};try{Component.displayName="Component",Component.__docgenInfo={description:"",displayName:"Component",props:{children:{defaultValue:null,description:"Button label",name:"children",required:!0,type:{name:"ReactNode"}},onClick:{defaultValue:null,description:"Simple click handler",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},size:{defaultValue:null,description:"Size of the button",name:"size",required:!0,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithDefaultExport.stories.tsx#Component"]={docgenInfo:Component.__docgenInfo,name:"Component",path:"src/stories/ButtonWithDefaultExport.stories.tsx#Component"})}catch(__react_docgen_typescript_loader_error){}Component.__docgenInfo={description:"",methods:[],displayName:"Component"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithDefaultExport.stories.tsx"]={name:"Component",docgenInfo:Component.__docgenInfo,path:"src/stories/ButtonWithDefaultExport.stories.tsx"})},1464:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Component",(function(){return Component}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),ButtonWithOptionalSizeDefaultExport=(__webpack_require__(2),function(props){return react_default.a.createElement("button",Object.assign({type:"button"},props))});ButtonWithOptionalSizeDefaultExport.displayName="ButtonWithOptionalSizeDefaultExport",ButtonWithOptionalSizeDefaultExport.__docgenInfo={description:"The world's most _basic_ button",methods:[],displayName:"ButtonWithOptionalSizeDefaultExport",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Button label"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Simple click handler"},size:{required:!1,tsType:{name:"union",raw:'"small" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"large"'}]},description:"Size of the button (optional)"}}};try{ButtonWithOptionalSizeDefaultExport.displayName="ButtonWithOptionalSizeDefaultExport",ButtonWithOptionalSizeDefaultExport.__docgenInfo={description:"The world's most _basic_ button",displayName:"ButtonWithOptionalSizeDefaultExport",props:{children:{defaultValue:null,description:"Button label",name:"children",required:!0,type:{name:"ReactNode"}},onClick:{defaultValue:null,description:"Simple click handler",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},size:{defaultValue:null,description:"Size of the button (optional)",name:"size",required:!1,type:{name:'"small" | "large" | undefined'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithOptionalSizeDefaultExport.tsx#ButtonWithOptionalSizeDefaultExport"]={docgenInfo:ButtonWithOptionalSizeDefaultExport.__docgenInfo,name:"ButtonWithOptionalSizeDefaultExport",path:"src/stories/ButtonWithOptionalSizeDefaultExport.tsx#ButtonWithOptionalSizeDefaultExport"})}catch(__react_docgen_typescript_loader_error){}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithOptionalSizeDefaultExport.tsx"]={name:"ButtonWithOptionalSizeDefaultExport",docgenInfo:ButtonWithOptionalSizeDefaultExport.__docgenInfo,path:"src/stories/ButtonWithOptionalSizeDefaultExport.tsx"});__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport {\n  ButtonWithOptionalSizeDefaultExport,\n  ButtonWithOptionalSizeDefaultExportProps,\n} from "./ButtonWithOptionalSizeDefaultExport";\n\nexport default {\n  title: "ButtonWithOptionalSizeDefaultExport",\n  component: ButtonWithOptionalSizeDefaultExport,\n};\n\nexport const Component = (args: ButtonWithOptionalSizeDefaultExportProps) => (\n  <ButtonWithOptionalSizeDefaultExport {...args} />\n);\nComponent.story = { args: { children: "Simple button" } };\n',locationsMap:{"buttonwithoptionalsizedefaultexport--component":{startLoc:{col:25,line:12},endLoc:{col:1,line:14},startBody:{col:25,line:12},endBody:{col:1,line:14}}}}},title:"ButtonWithOptionalSizeDefaultExport",component:ButtonWithOptionalSizeDefaultExport};var Component=function(args){return react_default.a.createElement(ButtonWithOptionalSizeDefaultExport,args)};Component.displayName="Component",Component.story={args:{children:"Simple button"}};try{Component.displayName="Component",Component.__docgenInfo={description:"",displayName:"Component",props:{children:{defaultValue:null,description:"Button label",name:"children",required:!0,type:{name:"ReactNode"}},onClick:{defaultValue:null,description:"Simple click handler",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},size:{defaultValue:null,description:"Size of the button (optional)",name:"size",required:!1,type:{name:'"small" | "large" | undefined'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithOptionalSizeDefaultExport.stories.tsx#Component"]={docgenInfo:Component.__docgenInfo,name:"Component",path:"src/stories/ButtonWithOptionalSizeDefaultExport.stories.tsx#Component"})}catch(__react_docgen_typescript_loader_error){}Component.__docgenInfo={description:"",methods:[],displayName:"Component"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/ButtonWithOptionalSizeDefaultExport.stories.tsx"]={name:"Component",docgenInfo:Component.__docgenInfo,path:"src/stories/ButtonWithOptionalSizeDefaultExport.stories.tsx"})},1465:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Component",(function(){return Component}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),Button=(__webpack_require__(2),function(props){return react_default.a.createElement("button",Object.assign({type:"button"},props))});Button.displayName="Button";try{Button.displayName="Button",Button.__docgenInfo={description:"The world's most _basic_ button",displayName:"Button",props:{children:{defaultValue:null,description:"Button label",name:"children",required:!0,type:{name:"ReactNode"}},onClick:{defaultValue:null,description:"Simple click handler",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},size:{defaultValue:null,description:"Size of the button",name:"size",required:!0,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/stories/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}Button.__docgenInfo={description:"The world's most _basic_ button",methods:[],displayName:"Button",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Button label"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Simple click handler"},size:{required:!0,tsType:{name:"union",raw:'"small" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"large"'}]},description:"Size of the button"}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Button.tsx"]={name:"Button",docgenInfo:Button.__docgenInfo,path:"src/stories/Button.tsx"});__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport { Button, ButtonProps } from "./Button";\n\nexport default {\n  title: "Button",\n  component: Button,\n};\n\nexport const Component = (args: ButtonProps) => <Button {...args} />;\nComponent.story = { args: { children: "Simple button" } };\n',locationsMap:{"button--component":{startLoc:{col:25,line:9},endLoc:{col:68,line:9},startBody:{col:25,line:9},endBody:{col:68,line:9}}}}},title:"Button",component:Button};var Component=function(args){return react_default.a.createElement(Button,args)};Component.displayName="Component",Component.story={args:{children:"Simple button"}};try{Component.displayName="Component",Component.__docgenInfo={description:"",displayName:"Component",props:{children:{defaultValue:null,description:"Button label",name:"children",required:!0,type:{name:"ReactNode"}},onClick:{defaultValue:null,description:"Simple click handler",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},size:{defaultValue:null,description:"Size of the button",name:"size",required:!0,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Button.stories.tsx#Component"]={docgenInfo:Component.__docgenInfo,name:"Component",path:"src/stories/Button.stories.tsx#Component"})}catch(__react_docgen_typescript_loader_error){}Component.__docgenInfo={description:"",methods:[],displayName:"Component"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Button.stories.tsx"]={name:"Component",docgenInfo:Component.__docgenInfo,path:"src/stories/Button.stories.tsx"})},499:function(module,exports,__webpack_require__){__webpack_require__(500),__webpack_require__(647),__webpack_require__(648),__webpack_require__(777),__webpack_require__(1399),__webpack_require__(1431),__webpack_require__(1436),__webpack_require__(1451),__webpack_require__(1454),module.exports=__webpack_require__(1458)},565:function(module,exports){},648:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(365)}},[[499,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,